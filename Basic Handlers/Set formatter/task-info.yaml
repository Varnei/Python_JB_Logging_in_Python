type: edu
files:
- name: set_formatter.py
  visible: true
  placeholders:
  - offset: 1180
    length: 57
    placeholder_text: enter same format string as used in basicConfig() example
    initial_state:
      length: 57
      offset: 1180
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: '%(asctime)s %(levelname)s %(message)s'
  - offset: 1257
    length: 43
    placeholder_text: set the formatter on the FileHandler object
    initial_state:
      length: 43
      offset: 1257
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: setFormatter(fmt)
  text: |
    from __future__ import print_function
    import math
    import logging

    logger = logging.getLogger('mortgage')

    def get_current_rate(years):
        logger.debug('Fetching current interest rate for %d years', years)
        rate = 5.3   # Stub external service call
        logger.debug('Service returned interest rate %f', rate)
        return rate

    def get_monthly_payment(principal, years):
        logger.info('Calling mortgage calculator')

        if years > 50:
            logger.warn('Term greater than 50 years')

        mon_rate = get_current_rate(years)/1200
        payments = years * 12
        logger.debug('Number of monthly payments %d', payments)
        result = principal * (mon_rate/(1-math.pow((1+mon_rate), -payments)))

        logger.debug('Calculated result is %f', result)
        logger.debug('Leaving mortgage calculator')
        return result

    if __name__ == '__main__':
        # logging.basicConfig(level=logging.DEBUG,
        #                     format='%(asctime)s %(levelname)s %(message)s',
        #                     filename='../../Sandbox/basic_file.log')

        log_filename = '../../Sandbox/file_handler_with_formatter.log'
        file_handler = logging.FileHandler(log_filename)

        fmt = logging.Formatter('enter same format string as used in basicConfig() example')
        file_handler.set the formatter on the FileHandler object

        root_logger = logging.getLogger()
        root_logger.addHandler(file_handler)
        root_logger.setLevel(logging.DEBUG)

        payment = get_monthly_payment(100000, 80)
        print('Monthly payment is %f' % payment)
  learner_created: false
- name: tests.py
  visible: false
  text: |+
    from test_helper import run_common_tests, failed, passed, get_answer_placeholders, check_answers


    def test_answer_placeholders():
        placeholders = get_answer_placeholders()
        answers = [
            ['%(asctime)s %(levelname)s %(message)s'],
            ['setFormatter(fmt)']
        ]
        check_answers(placeholders, answers)

    if __name__ == '__main__':
        run_common_tests()
        test_answer_placeholders()


  learner_created: false
status: Unchecked
record: -1
