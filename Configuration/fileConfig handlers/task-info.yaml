type: edu
files:
- name: file_config_handlers.py
  visible: true
  placeholders:
  - offset: 97
    length: 40
    placeholder_text: enter instance name for a handler object
    initial_state:
      length: 40
      offset: 97
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: handler1
  - offset: 238
    length: 40
    placeholder_text: enter instance name for a handler object
    initial_state:
      length: 40
      offset: 238
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: handler1
  text: |
    import logging
    import logging.config

    config = """
    [formatters]
    keys=formatter1

    [handlers]
    keys=enter instance name for a handler object

    [loggers]
    keys=root

    [formatter_formatter1]
    format=%(asctime)s %(levelname)s %(message)s

    [handler_enter instance name for a handler object]
    class=StreamHandler
    args=()
    formatter=formatter1

    [logger_root]
    handlers=handler1
    level=DEBUG
    """

    config_filename = 'logging.ini'

    def write_config_file(filename, data):
        with open(filename, 'w') as fp:
            fp.write(data)


    if __name__ == '__main__':
        write_config_file(config_filename, config)

        logging.config.fileConfig(config_filename)

        logging.debug('this is a debug message')
        logging.warning('this is a warning message')
  learner_created: false
- name: tests.py
  visible: false
  text: |+
    from test_helper import run_common_tests, failed, passed, get_answer_placeholders, check_answers


    def test_answer_placeholders():
        placeholders = get_answer_placeholders()
        answers = [
            ["handler1"],
            ["handler1"],
        ]
        check_answers(placeholders, answers)


    if __name__ == '__main__':
        run_common_tests()
        test_answer_placeholders()


  learner_created: false
status: Unchecked
record: -1
