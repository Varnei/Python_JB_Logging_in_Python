type: edu
files:
- name: log_method.py
  visible: true
  placeholders:
  - offset: 139
    length: 13
    placeholder_text: logger.debug(
    initial_state:
      length: 13
      offset: 139
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: logger.log(logging.DEBUG,
  - offset: 257
    length: 13
    placeholder_text: logger.debug(
    initial_state:
      length: 13
      offset: 257
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: logger.log(logging.DEBUG,
  - offset: 378
    length: 12
    placeholder_text: logger.info(
    initial_state:
      length: 12
      offset: 378
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: logger.log(logging.INFO,
  - offset: 449
    length: 12
    placeholder_text: logger.warn(
    initial_state:
      length: 12
      offset: 449
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: logger.log(logging.WARNING,
  - offset: 566
    length: 13
    placeholder_text: logger.debug(
    initial_state:
      length: 13
      offset: 566
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: logger.log(logging.DEBUG,
  - offset: 702
    length: 13
    placeholder_text: logger.debug(
    initial_state:
      length: 13
      offset: 702
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: logger.log(logging.DEBUG,
  - offset: 755
    length: 13
    placeholder_text: logger.debug(
    initial_state:
      length: 13
      offset: 755
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: logger.log(logging.DEBUG,
  text: |
    from __future__ import print_function
    import math
    import logging

    logger = logging.getLogger('mortgage')

    def get_current_rate(years):
        logger.debug('Fetching current interest rate for %d years' % years)
        rate = 5.3   # Stub external service call
        logger.debug('Service returned interest rate %f' % rate)
        return rate

    def get_monthly_payment(principal, years):
        logger.info("Calling mortgage calculator")

        if years > 50:
            logger.warn('Term greater than 50 years')

        mon_rate = get_current_rate(years)/1200
        payments = years * 12
        logger.debug('Number of monthly payments %d' % payments)
        result = principal * (mon_rate/(1-math.pow((1+mon_rate), -payments)))

        logger.debug("Calculated result is %f" % result)
        logger.debug("Leaving mortgage calculator")
        return result

    if __name__ == '__main__':
        logging.basicConfig(level=logging.DEBUG)
        payment = get_monthly_payment(100000, 30)
        print('Monthly payment is %f' % payment)
  learner_created: false
- name: tests.py
  visible: false
  text: |+
    from test_helper import run_common_tests, failed, passed, get_answer_placeholders, check_answers


    def test_answer_placeholders():
        answers = [
            ['logger.log(logging.DEBUG,'],
            ['logger.log(logging.DEBUG,'],
            ['logger.log(logging.INFO,'],
            ['logger.log(logging.WARN,', 'logger.log(logging.WARNING,'],
            ['logger.log(logging.DEBUG,'],
            ['logger.log(logging.DEBUG,'],
            ['logger.log(logging.DEBUG,']
        ]

        check_answers(get_answer_placeholders(), answers)


    if __name__ == '__main__':
        run_common_tests()
        test_answer_placeholders()

  learner_created: false
status: Unchecked
record: -1
